1 - Добавить валидацию формы ввода при редактировании автора в EditAuthor.cshtml
	08.02.2016 добавлена валидация полей имя и фамилия.Добавлять валидацию по мере
	создания новых полей
2 - Поработать со стилями в EditAuthor.cshtml
3 - Поработать со стилями в AuthorSummary.cshtml
4 - Либо сделать ссылку Edit карандашом, либо превратить ее в кнопку
	08.02.206 была поптка превратить ее в кнопку, но после работы аякса кнопка почему-то
	становится не валидной...


-------------------------------------------------

Сделано 5 - Доработать базу: добавить даты и биографию.


 @Html.DropDownList("author_id", ((List<Author>)ViewBag.AuthorList).Select(obj =>
              new SelectListItem()
                   {
                       Text = obj.author_id.ToString(),
                       Value = obj.author_id.ToString(),
                       Selected = obj.author_id == Model.author_id
                    }
              ))




BookTempRepository выкосить.Books.cs тоже. Разобраться, как обновить вью для книг.

----------------------------------
21.02
Сделано - Разобраться с жанрами

-----------------------------------

25.02 
Был добавлен контроллер Book для упрощения редактирования. Добавить для него ViewModel чтобы избежать
использование ViewBag

Сделано
------------------------------------------------------------

Добавить контроллер для редактирования автора

Сделано
---------------------------------------------------------------
Разобраться с ошибкой:
Элемент модели, переданный в словарь, имеет тип "MyBooks.Domain.Entities.CommonBook", 
но для этого словаря требуется элемент модели типа "MyBooks.WebUI.Models.EditCommonBookViewModel".

Ошибка происхоит из-за того,что элементы не могут добавитсья в список книг, IsValid=false и мы с
неверным типом пытаемся загрузить представление. Но вопрос о том, как преобразовать элементы списка
в тип Book остается открытым.

Посмотреть, как сделать коробку для перетаскивания книг в коммон-книгу
------------------------------------------------------------------------
27.03.2016
Удалось сохранить произвольную книгу в коммон книгу - сработала связь многие ко многим
и произошла удачная запись в таблицу [BookCommonBooks]. Решение было найдено в статье
http://dotnetslackers.com/articles/ado_net/Managing-Entity-Framework-ObjectContext-lifespan-and-scope-in-n-layered-ASP-NET-applications.aspx#one-shared-static-objectcontext
и заключалось в том, чтобы использовать общий контекст для всех классов.Исключение
"The relationship between the two objects cannot be defined because they are attached to different ObjectContext objects."
было ликвидировано.
Сделать отдельную страницу для добавление книги в коммон книгу.



--------------------------------------------------------------------------------------
12.04
Для коммон-книги добавлены поля год, издательство, картинка. Однако не получается
передать корректно вью модель в представление, поэтому используется CommonBook.
Возникают проблемы из-за этого.Не понятно, как данные передаются в форму, что
определяет тип в методе пост.


17.04
Началась разработка страницы добавления книг в коммон книгу.Созданы две таблицы: левая со всеми 
книгами кроме уже выбранных, вторая с выбранными. Необходимо реализовать для них
drag&drop. 

25.06
Drag&Drop реализован в файле CommonBookController и AddBooksToCommonBook представлении. 
Книги добавляются. Теперь нужно:
1 - сделать то же для удаления (загатовка есть в AddBooksToCommonBook методе контроллера
нужно только еще пройтись по booksToRemove)
2 - порефакторить. Приницп SRP явно нарушен в AddBooksToCommonBook  методе CommonBookController 
3 - поменять цвет рамки

3.07
Страница с добавлением и удалением книг примерно готова и работает.
Возможны дизайнерские улучшения.
1 - Надо поработать с добавлением новых книг и авторов, т.к. сделано только изменение.
2 - Необходимо улучшить просмотр авторов и 
3 - создать просмотр книг.